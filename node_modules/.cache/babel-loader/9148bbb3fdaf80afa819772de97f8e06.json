{"ast":null,"code":"import _classCallCheck from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Anastasia/Documents/frontend-javascript-test/src/components/FetchData.js\";\nimport React, { Component } from \"react\";\nimport { Preloader } from \"./Preloader\";\nimport { dataMin, data } from \"../data\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar FetchData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchData, _Component);\n\n  function FetchData(type) {\n    var _this;\n\n    _classCallCheck(this, FetchData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchData).call(this));\n    _this.state = {\n      data: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(FetchData, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true,\n        error: null\n      });\n      var url;\n      if (this.props.urlType === \"data-min\") url = dataMin;\n      if (this.props.urlType === \"data\") url = data;\n      console.log(url);\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        var userData = users.map(function (data) {\n          return React.createElement(\"tr\", {\n            key: data.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, data.id), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, data.firstName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, data.lastName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, data.email), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, data.phone));\n        });\n\n        _this2.setState({\n          data: userData\n        });\n\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content;\n\n      if (this.state.isLoading) {\n        content = React.createElement(Preloader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      } else {\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table-striped\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          className: \"thead-light\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          className: \"table-articles\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"id\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"firstName\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"lastName\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"email\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"phone\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, this.state.data))));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return FetchData;\n}(Component);\n\nexport default FetchData;","map":{"version":3,"sources":["/Users/Anastasia/Documents/frontend-javascript-test/src/components/FetchData.js"],"names":["React","Component","Preloader","dataMin","data","FetchData","type","state","isLoading","setState","error","url","props","urlType","console","log","fetch","then","response","json","users","userData","map","id","firstName","lastName","email","phone","content"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Preloader } from \"./Preloader\";\nimport { dataMin, data } from \"../data\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass FetchData extends Component {\n  constructor(type) {\n    super();\n    this.state = {\n      data: [],\n      isLoading: true\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ isLoading: true, error: null });\n\n    let url;\n    if (this.props.urlType === \"data-min\") url = dataMin;\n    if (this.props.urlType === \"data\") url = data;\n\n    console.log(url);\n    fetch(url)\n      .then(response => {\n        return response.json();\n      })\n      .then(users => {\n        let userData = users.map(data => {\n          return (\n            <tr key={data.id}>\n              <td>{data.id}</td>\n              <td>{data.firstName}</td>\n              <td>{data.lastName}</td>\n              <td>{data.email}</td>\n              <td>{data.phone}</td>\n            </tr>\n          );\n        });\n\t\tthis.setState({ data: userData });\n\t\tthis.setState({\n\t\t\tisLoading: false\n\t\t  });\n      });\n  }\n  render() {\n    let content;\n\n    if (this.state.isLoading) {\n\t  content = <Preloader />;\n    } else {\n      content = \n          <div>\n            <div className=\"table\">\n              <table className=\"table-striped\">\n                <thead className=\"thead-light\">\n                  <tr className=\"table-articles\">\n                    <td>id</td>\n                    <td>firstName</td>\n                    <td>lastName</td>\n                    <td>email</td>\n                    <td>phone</td>\n                  </tr>\n                </thead>\n                <tbody>{this.state.data}</tbody>\n              </table>\n            </div>\n          </div>;\n    }\n    return (\n\t\t<div>\n\t\t\t{content}\n\t\t</div>\n\t)\n  }\n}\n\nexport default FetchData;\n"]},"metadata":{},"sourceType":"module"}