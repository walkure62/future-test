{"ast":null,"code":"import _classCallCheck from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Anastasia/Documents/frontend-javascript-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Anastasia/Documents/frontend-javascript-test/src/components/FetchData.js\";\nimport React, { Component } from 'react';\nimport { Preloader } from './Preloader';\nimport { dataMin, data } from '../data';\n\nvar FetchData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchData, _Component);\n\n  function FetchData(type) {\n    var _this;\n\n    _classCallCheck(this, FetchData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchData).call(this));\n    _this.state = {\n      data: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(FetchData, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true,\n        error: null\n      });\n      var url;\n      if (this.props.urlType === 'data-min') url = dataMin;\n      if (this.props.urlType === 'data') url = data;\n      console.log(url);\n      fetch(url).then(function (response) {\n        _this2.setState({\n          isLoading: false\n        });\n\n        return response.json();\n      }).then(function (users) {\n        var userData = users.map(function (data) {\n          return React.createElement(\"tr\", {\n            key: data.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, data.id), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, data.firstName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, data.lastName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, data.email), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, data.phone));\n        });\n\n        _this2.setState({\n          data: userData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var content;\n\n      if (this.state.isLoading) {\n        content = React.createElement(Preloader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      } else {\n        content = function content(mainTable) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"table\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"table\", {\n            className: \"table-striped\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            className: \"thead-light\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            className: \"table-articles\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"id\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, \"firstName\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"lastName\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"email\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, \"phone\"))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, _this3.state.data))));\n        };\n      }\n\n      return content;\n    }\n  }]);\n\n  return FetchData;\n}(Component);\n\nexport default FetchData;","map":{"version":3,"sources":["/Users/Anastasia/Documents/frontend-javascript-test/src/components/FetchData.js"],"names":["React","Component","Preloader","dataMin","data","FetchData","type","state","isLoading","setState","error","url","props","urlType","console","log","fetch","then","response","json","users","userData","map","id","firstName","lastName","email","phone","content","mainTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Preloader} from './Preloader'\nimport {dataMin, data} from '../data'\n\nclass FetchData extends Component {\n    constructor(type) {\n        super();\n        this.state = {\n            data: [],\n            isLoading: true\n        };\n}\n\n    componentWillMount() {\n            this.setState({ isLoading: true, error: null })\n\n            let url;\n            if (this.props.urlType === 'data-min') url = dataMin\n            if (this.props.urlType === 'data') url = data\n            \n            console.log(url);\n        fetch(url)\n        .then(response => {\n            this.setState({\n                isLoading: false\n            });\n            return response.json();\n        }).then(users => {\n            let userData = users.map(data => {\n                return(\n                    <tr key={data.id}>\n                        <td>{data.id}</td>\n                        <td>{data.firstName}</td>\n                        <td>{data.lastName}</td>\n                        <td>{data.email}</td>\n                        <td>{data.phone}</td>\n                    </tr>\n                )\n            })\n            this.setState({data: userData})\n        });\n\n    }\n    render() {\n        let content;\n\n        if (this.state.isLoading) {\n            content = <Preloader />\n        } else {\n            content = mainTable => {\n                return(\n                    <div>\n                        <div className=\"table\">\n                            <table className=\"table-striped\">\n                            <thead className=\"thead-light\">\n                                <tr className=\"table-articles\">\n                                    <td>id</td>\n                                    <td>firstName</td>\n                                    <td>lastName</td>\n                                    <td>email</td>\n                                    <td>phone</td>\n                                </tr>\n                            </thead>\n                                <tbody>\n                                    {this.state.data}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                )\n            }\n        }\n        return (\n            content\n        )\n    }\n}\n\nexport default FetchData;"]},"metadata":{},"sourceType":"module"}